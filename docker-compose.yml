services:
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    ports:
      - "10000:10000" # Blob
      - "10001:10001" # Queue
      - "10002:10002" # Table
    volumes:
      - ${USERPROFILE}/.azurite:/data
    command: >
      azurite
      --location /data
      --debug /data/debug.log
      --blobHost 0.0.0.0
      --queueHost 0.0.0.0
      --tableHost 0.0.0.0
    healthcheck:
      test:
        [
          "CMD","node","-e",
             "fetch('http://localhost:10000/devstoreaccount1',{method:'HEAD'})
        .then(r=>process.exit(([200,400,401].includes(r.status))?0:1))
        .catch(()=>process.exit(1))"
        ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped

  api:
    image: marinakregistry123.azurecr.io/cloudvideouploader:dev
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: cloudvideouploader
    depends_on:
      azurite:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - DOTNET_ENVIRONMENT=Development

      # Point the SDKs at the azurite *service* (not localhost)
      - AzureStorage__BlobConnectionString=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1
      - AzureStorage__QueueConnectionString=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1
      - AzureStorage__BlobContainerName=videos
      - AzureStorage__QueueName=video-processing
    ports:
      - "5080:8080"
    restart: unless-stopped
